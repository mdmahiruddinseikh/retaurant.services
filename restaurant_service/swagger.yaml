openapi: 3.0.1
info:
  title: Restaurant Service CRUD APIs
  description: All CRUD APIs
  version: 0.0.1
servers:
  - url: http://localhost:8080
paths:
  /restaurants/search/{search_string}:
    get:
      summary: Get all restaurant list.
      operationId: serachRestaurant
      tags:
        - RestaurantService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: search_string
          description: search key.
          required: true
          schema:
            type: string
            example: Veg
            description: search_string
        - in: query
          name: skip
          description: Skip for pagination.
          required: false
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          description: limit for pagination.
          required: false
          schema:
            type: integer
            example: 50
      responses:
        200:
          description: Restaurant List.
          content:
            application/json:
              schema:
                $ref: "#/definitions/RestaurantList"
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
  /restaurants:
    post:
      tags:
        - RestaurantService
      summary: Register new restaurant
      operationId: createrestaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/CreateRetaurantCreateReqObj"
      responses:
        200:
          description: Create restaurant
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    exaple: 200
                  response:
                    type: String
                    example: success
                  msg:
                    type: String
                    example: New restaurant created.
                  data:
                    type: object
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
    get:
      summary: Get all restaurant list.
      operationId: getRestaurantList
      tags:
        - RestaurantService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: query
          name: skip
          description: Skip for pagination.
          required: false
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          description: limit for pagination.
          required: false
          schema:
            type: integer
            example: 50
      responses:
        200:
          description: Restaurant List.
          content:
            application/json:
              schema:
                $ref: "#/definitions/RestaurantList"
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
  /restaurants/{id}:
    get:
      summary: get restaurant by id.
      operationId: getRestaurantById
      tags:
        - RestaurantService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: _id of document.
          required: true
          schema:
            type: string
            example: 62663ede2e3cde361712e022
            description: _id of the document
      responses:
        200:
          description: Restaurant data
          content:
            application/json:
              schema:
                $ref: "#/definitions/SpecificObjData"
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
    put:
      tags:
        - RestaurantService
      summary: Update restaurant data.
      operationId: updateData
      produces:
        - application/json
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: _id of the document
          required: true
          schema:
            type: string
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/CreateRetaurantCreateReqObj"
      responses:
        200:
          description: Update data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  response:
                    type: string
                    example: success
                  msg:
                    type: string
                    example: Data updated successfully.
                  data:
                    type: object
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
    delete:
      tags:
        - RestaurantService
      summary: Delete by id.
      operationId: deleteById
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: _id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: Delete restaurant.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  response:
                    type: string
                    example: success
                  msg:
                    type: string
                    example: Deleted successfully..
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
  /restaurants/{restaurant_id}/orders:
    get:
      summary: get orders of restaurant by id.
      operationId: getOrdersOfRestaurantById
      tags:
        - RestaurantService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: restaurant_id
          description: restaurant_id of document.
          required: true
          schema:
            type: string
            example: 62663ede2e3cde361712e022
            description: restaurant_id of the document
      responses:
        200:
          description: Order data
          content:
            application/json:
              schema:
                $ref: "#/definitions/OrderList"
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
definitions:
  ItemListObjArr:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        menu_id:
          type: string
        restaurant_id:
          type: string
        price:
          type: integer
        order_id:
          type: integer
        createdAt:
          type: date
        updatedAt:
          type: date
  OrderListObjArr:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: string
        amount:
          type: integer
        order_status:
          type: string
        items:
          $ref: "#/definitions/ItemListObjArr"
  OrderList:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Order list.
      data:
        $ref: "#/definitions/OrderListObjArr"
  OrderListObjData:
    type: object
    properties:
      id:
        type: integer
      customer_id:
        type: string
      amount:
        type: integer
      order_status:
        type: string
      items:
        $ref: "#/definitions/ItemListObjArr"
  SpecificOrderData:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Order data.
      data:
        $ref: "#/definitions/OrderListObjData"
  UpdateData:
    type: object
    properties:
      full_name:
        type: string
      mobile_no:
        type: string
      alternative_mobile_no:
        type: string
  CreateRetaurantCreateReqObj:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
      city:
        type: string
      state:
        type: string
      cusine:
        type: string
      avg_rating:
        type: integer
      total_reviews:
        type: integer
      locations:
        type: array
      contact_no:
        type: string
      menus:
        $ref: "#/definitions/menusArr"
  menusArr:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        price:
          type: integer
  RestaurantList:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Restaurant list.
      data:
        $ref: "#/definitions/ListObjArr"
  LoginReqBody:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  SpecificObjData:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Restaurant data.
      data:
        $ref: "#/definitions/ResObjData"
  SpecificCustomerDataLogin:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Restaurant data.
      token:
        type: string
      data:
        $ref: "#/definitions/CustomerListObjData"
  ResObjData:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      city:
        type: string
      state:
        type: string
      cusine:
        type: string
      avg_rating:
        type: integer
      total_reviews:
        type: integer
      locations:
        type: array
      createdAt:
        type: date
      updatedAt:
        type: date
      menus:
        $ref: "#/definitions/menuList"
  ListObjArr:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        city:
          type: string
        state:
          type: string
        cusine:
          type: string
        avg_rating:
          type: integer
        total_reviews:
          type: integer
        locations:
          type: array
        createdAt:
          type: date
        updatedAt:
          type: date
        menus:
          $ref: "#/definitions/menuList"
  menuList:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        category:
          type: string
        price:
          type: integer
        createdAt:
          type: date
        updatedAt:
          type: date
  Error:
    type: object
    properties:
      status:
        type: integer
        example: 400
      response:
        type: string
        example: error
      msg:
        type: string
        example: Something went wrong.
      error:
        type: object
        properties:
          name:
            type: string
          errors:
            type: array
            items:
              type: object
              properties:
                message:
                  type: string
  ValidationError:
    type: object
    properties:
      status:
        type: integer
        example: 401
      response:
        type: string
        example: validationerror
      msg:
        type: string
        example: validation msg
