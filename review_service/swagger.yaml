openapi: 3.0.1
info:
  title: Review Service CRUD APIs
  description: All CRUD APIs
  version: 0.0.1
servers:
- url: http://localhost:8083
paths:  
  /reviews:
     post:
      tags: 
        - ReviewService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
      summary: Add new review.
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/CreateReview"
      responses:
        200:
          description: Create review.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    exaple: 200
                  response:
                    type: String
                    example: success
                  msg:
                    type: String
                    example: Created.
                  data:
                    type: object
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
     get:
      summary: Get all review list.
      operationId: getReviewList
      tags:
        - ReviewService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: query
          name: skip
          description: Skip for pagination.
          required: false
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          description: limit for pagination.
          required: false
          schema:
            type: integer
            example: 50
      responses:
        200:
          description: Review List.
          content:
            application/json:
              schema:
                $ref: "#/definitions/ReviewList"
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
  /reviews/{id}:
    get:
      summary: get review by id.
      operationId: getReviewById
      tags:
       - ReviewService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: _id of document.
          required: true
          schema:
            type: string
            example: 62663ede2e3cde361712e022
            description: _id of the document
      responses:
        200:
          description: Review data
          content:
            application/json:
              schema:
                $ref: "#/definitions/SpecificObjData"
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
    put:
      tags:
        - ReviewService
      summary: Update review data.
      operationId: updateData
      produces:
        - application/json
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: _id of the document
          required: true
          schema:
            type: string
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/definitions/CreateReview"
      responses:
        200:
          description: Update data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  response:
                    type: string
                    example: success
                  msg:
                    type: string
                    example: Data updated successfully. 
                  data:
                    type: object
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
    delete:
      tags:
       - ReviewService
      summary: Delete by id.
      operationId: deleteById
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: id
          description:  _id
          required: true
          schema:
            type: string
            example: 1
      responses:
        200:
          description: Delete restaurant.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  response:
                    type: string
                    example: success
                  msg:
                    type: string
                    example: Deleted successfully.. 
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
  /reviews/{restaurant_id}/restaurant:
    get:
      summary: Get restaurant review list.
      operationId: getRestaurantReviewList
      tags:
        - ReviewService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: restaurant_id
          description: restaurant_id of retaurant.
          required: true
          schema:
            type: string
            example: 62663ede2e3cde361712e022
            description: _id of the document
        - in: query
          name: skip
          description: Skip for pagination.
          required: false
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          description: limit for pagination.
          required: false
          schema:
            type: integer
            example: 50
      responses:
        200:
          description: Review List.
          content:
            application/json:
              schema:
                $ref: "#/definitions/ReviewList"
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
  /reviews/{customer_id}/customer:
    get:
      summary: Get customer review list.
      operationId: getCustomerReviewList
      tags:
        - ReviewService
      parameters:
        - in: header
          name: token
          description: token for authentication.
          required: true
          schema:
            type: string
        - in: path
          name: customer_id
          description: customer_id of customer.
          required: true
          schema:
            type: string
            example: 62663ede2e3cde361712e022
            description: _id of the document
        - in: query
          name: skip
          description: Skip for pagination.
          required: false
          schema:
            type: integer
            example: 0
        - in: query
          name: limit
          description: limit for pagination.
          required: false
          schema:
            type: integer
            example: 50
      responses:
        200:
          description: Review List.
          content:
            application/json:
              schema:
                $ref: "#/definitions/ReviewList"
        401:
          description: validation error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ValidationError"
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/definitions/Error"
definitions:
  ItemListObjArr:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        menu_id:
          type: string
        restaurant_id:
          type: string
        price:
          type: integer
        order_id: 
          type: integer
        createdAt:
          type: date
        updatedAt:
          type: date
  OrderListObjArr:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: string
        amount:
          type: integer
        order_status:
          type: string
        items: 
          $ref: "#/definitions/ItemListObjArr"
  OrderList:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Order list.
      data:
        $ref: "#/definitions/OrderListObjArr"
  OrderListObjData:
    type: object
    properties:
      id:
        type: integer
      customer_id:
        type: string
      amount:
        type: integer
      order_status:
        type: string
      items: 
        $ref: "#/definitions/ItemListObjArr"
  SpecificOrderData:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Order data.
      data:
        $ref: "#/definitions/OrderListObjData"
  UpdateData:
    type: object
    properties:
      full_name:
        type: string
      mobile_no:
        type: string
      alternative_mobile_no:
        type: string
  CreateReview:
    type: object
    properties:
      restaurant_id:
        type: string
      customer_id:
        type: string
      description:
        type: string
      rating:
        type: integer
  review_ratings_obj:
    type: object
    properties:
      total_rating:
        type: string
      avg_rating:
        type: integer
      total_rating_count:
        type: integer
  ReviewList:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Customer list.
      data:
        $ref: "#/definitions/reviewAaary"
      review_ratings:
        $ref: "#/definitions/review_ratings_obj"
      
  LoginReqBody:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  SpecificObjData:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Review data.
      data:
        $ref: "#/definitions/ResObjData"
  SpecificCustomerDataLogin:
    type: object
    properties:
      status:
        type: integer
        example: 200
      response:
        type: string
        example: success
      msg:
        type: string
        example: Customer data.
      token:
        type: string
      data:
        $ref: "#/definitions/CustomerListObjData"
  ResObjData:
    type: object
    properties:
      _id:
        type: string
      restaurant_id:
          type: string
      customer_id:
        type: string
      description:
        type: string
      rating:
        type: integer
  reviewAaary:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        restaurant_id:
          type: string
        customer_id:
          type: string
        description:
          type: string
        rating:
          type: integer
  Error:
    type: object
    properties:
      status:
        type: integer
        example: 400
      response:
        type: string
        example: error
      msg:
        type: string
        example: Something went wrong.
      error:
        type: object
        properties:
          name:
            type: string
          errors:
            type: array
            items:
              type: object
              properties:
                message:
                  type: string
  ValidationError:
    type: object
    properties:
      status:
        type: integer
        example: 401
      response:
        type: string
        example: validationerror
      msg:
        type: string
        example: validation msg